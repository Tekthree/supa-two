---
import videos from '../scripts/video.js';
const videoId = videos.map((object) => object.video_id);
---

<div class='fixed z-50 inset-x-0 bottom-0 p-4 bg-[#090c14]'>
  <div class='flex items-center justify-center space-x-4'>
    <img
      src=''
      class='aspect-[4/3] h-12'
      alt=''
      id='video-thumbnail'
      style="display:none"
    />
    <button class='button rounded-full' id='back-button'
      ><svg
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 24 24'
        stroke-width='1.5'
        stroke='currentColor'
        class='w-6 h-6'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z'
        ></path>
      </svg>
    </button>

    <button class='button rounded-full' id='pause-button'
      ><svg
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 24 24'
        stroke-width='1.5'
        stroke='currentColor'
        class='w-6 h-6'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M14.25 9v6m-4.5 0V9M21 12a9 9 0 11-18 0 9 9 0 0118 0z'></path>
      </svg>
    </button>
    <button class='button rounded-full' id='play-btn'
      ><svg
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 24 24'
        stroke-width='1.5'
        stroke='currentColor'
        class='w-6 h-6'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M21 12a9 9 0 11-18 0 9 9 0 0118 0z'></path>
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M15.91 11.672a.375.375 0 010 .656l-5.603 3.113a.375.375 0 01-.557-.328V8.887c0-.286.307-.466.557-.327l5.603 3.112z'
        ></path>
      </svg>
    </button>
    
    <button class='button rounded-full' id='next-button'
      ><svg
        xmlns='http://www.w3.org/2000/svg'
        fill='none'
        viewBox='0 0 24 24'
        stroke-width='1.5'
        stroke='currentColor'
        class='w-6 h-6'
      >
        <path
          stroke-linecap='round'
          stroke-linejoin='round'
          d='M3 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062A1.125 1.125 0 013 16.81V8.688zM12.75 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062a1.125 1.125 0 01-1.683-.977V8.688z'
        ></path>
      </svg>
    </button>
  </div>
</div>

<div id='myDiv' data-myVariable={videoId}></div>

<script is:inline>
  var tag = document.createElement('script');
  tag.src = 'https://www.youtube.com/iframe_api';
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var data = document.getElementById('myDiv').getAttribute('data-myVariable');
  const dataArray = data.split(',');
  const dataJSON = JSON.stringify(dataArray);

  const videoId = JSON.parse(dataJSON);

  var player;
  currentVideoId = 0;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      playerVars: {
        showinfo: 0,
        modestbranding: 1,
      },
      events: {
        onReady: onPlayerReady,
        onStateChange: onPlayerStateChange,
      },
    });
  }
  function onPlayerReady(event) {
    event.target.loadVideoById(videoId[currentVideoId]);

    const thumbnailImage = document.getElementById('video-thumbnail');
    thumbnailImage.style.display = 'block';

    // Set the src attribute of the img tag to the URL of the thumbnail for the current video ID
    thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
    

    // bind events
    var playButton = document.getElementById('play-btn');

    var pauseButton = document.getElementById('pause-button');
   
    var nextButton = document.getElementById('next-button');
    var backButton = document.getElementById('back-button');

    playButton.addEventListener('click', function () {
      player.playVideo();
    });

    pauseButton.addEventListener('click', function () {
      player.pauseVideo();
    });

    

    nextButton.addEventListener('click', function () {
      currentVideoId++;
      if (currentVideoId >= videoId.length) {
        currentVideoId = 0;
      }
      player.loadVideoById(videoId[currentVideoId]);
      thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
    });

    backButton.addEventListener('click', function () {
      currentVideoId--;
      if (currentVideoId < 0) {
        currentVideoId = videoId.length - 1;
      }
      player.loadVideoById(videoId[currentVideoId]);
      thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
    });
  }

  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.ENDED) {
      currentVideoId++;
      if (currentVideoId < videoId.length) {
        player.loadVideoById(videoId[currentVideoId]);
      } else {
        currentVideoId = 0;
        event.target.loadVideoById(videoId[currentVideoId]);
      }
    }
  }

  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.PLAYING) {
      var playButton = document.getElementById('play-btn');
      var pauseButton = document.getElementById('pause-button');
     
      playButton.style.display = 'none';
    
      pauseButton.style.display = 'block';
    } else if (event.data == YT.PlayerState.PAUSED) {
      var playButton = document.getElementById('play-btn');
      var pauseButton = document.getElementById('pause-button');

      pauseButton.style.display = 'none';
      playButton.style.display = 'block';
    }
  }
</script>
