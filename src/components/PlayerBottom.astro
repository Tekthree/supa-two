---
import videos from '../scripts/video.js';
import user from '../scripts/video.js';

const easeVideos = user.filter(
  (video) => video.username === Astro.params.username
);

const profileVids = easeVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

console.log(profileVids)

const videoId = videos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));
var firstTen = videoId.slice(0, 20);

const random = videos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

var randomVideos = random.sort(() => Math.random() - 0.5);

import hipVideos from '../scripts/hipVideosCall.js';
const hipvideoId = hipVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import houseVideos from '../scripts/houseVideosCall.js';
const housevideoId = houseVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import dnbVideos from '../scripts/dnbVideosCall.js';
const dnbvideoId = dnbVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import gemsVideos from '../scripts/gemsVideosCall.js';
const gemsvideoId = gemsVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import turnVideos from '../scripts/turnVideosCall.js';
const turnvideoId = turnVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import reggaVideos from '../scripts/reggaVideosCall.js';
const reggavideoId = reggaVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));

import beatVideos from '../scripts/beatVideosCall.js';
const beatvideoId = beatVideos.map((object) => ({
  video_id: object.video_id,
  title: object.title,
}));
---

<div
  class='fixed z-50 inset-x-0 bottom-0 p-4 bg-bnav shadow-[0px_-20px_70px_4px_rgba(0,0,0,0.26)]'
>
  <div class='flex items-center justify-between space-x-3 md:max-w-lg mx-auto'>
    <img
      src=''
      class='aspect-[4/3] h-12'
      alt=''
      id='video-thumbnail'
      style='display:none'
    />
    <h3
      class='text-xs leading-snug md:text-sm lg:font-medium text-mt line-clamp-2'
      id='song-title'
    >
      song title
    </h3>
    <div class='flex space-x-2'>
      <button class='button rounded-full' id='back-button'
        ><svg
          xmlns='http://www.w3.org/2000/svg'
          fill='none'
          viewBox='0 0 24 24'
          stroke-width='1.5'
          stroke='currentColor'
          class='w-5 h-5'
        >
          <path
            stroke-linecap='round'
            stroke-linejoin='round'
            d='M21 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953l7.108-4.062A1.125 1.125 0 0121 8.688v8.123zM11.25 16.811c0 .864-.933 1.405-1.683.977l-7.108-4.062a1.125 1.125 0 010-1.953L9.567 7.71a1.125 1.125 0 011.683.977v8.123z'
          ></path>
        </svg>
      </button>

      <button class='button rounded-full' style='display:none' id='pause-button'
        ><svg
          xmlns='http://www.w3.org/2000/svg'
          viewBox='0 0 24 24'
          fill='currentColor'
          class='w-5 h-5'
        >
          <path
            fill-rule='evenodd'
            d='M6.75 5.25a.75.75 0 01.75-.75H9a.75.75 0 01.75.75v13.5a.75.75 0 01-.75.75H7.5a.75.75 0 01-.75-.75V5.25zm7.5 0A.75.75 0 0115 4.5h1.5a.75.75 0 01.75.75v13.5a.75.75 0 01-.75.75H15a.75.75 0 01-.75-.75V5.25z'
            clip-rule='evenodd'></path>
        </svg>
      </button>
      <button class='button rounded-full' id='play-btn'
        ><svg
          xmlns='http://www.w3.org/2000/svg'
          viewBox='0 0 24 24'
          fill='currentColor'
          class='w-5 h-5'
        >
          <path
            fill-rule='evenodd'
            d='M4.5 5.653c0-1.426 1.529-2.33 2.779-1.643l11.54 6.348c1.295.712 1.295 2.573 0 3.285L7.28 19.991c-1.25.687-2.779-.217-2.779-1.643V5.653z'
            clip-rule='evenodd'></path>
        </svg>
      </button>

      <button class='button rounded-full' id='next-button'
        ><svg
          xmlns='http://www.w3.org/2000/svg'
          fill='none'
          viewBox='0 0 24 24'
          stroke-width='1.5'
          stroke='currentColor'
          class='w-5 h-5'
        >
          <path
            stroke-linecap='round'
            stroke-linejoin='round'
            d='M3 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062A1.125 1.125 0 013 16.81V8.688zM12.75 8.688c0-.864.933-1.405 1.683-.977l7.108 4.062a1.125 1.125 0 010 1.953l-7.108 4.062a1.125 1.125 0 01-1.683-.977V8.688z'
          ></path>
        </svg>
      </button>
    </div>
  </div>
</div>

<div id='myDiv' data-myVariable={JSON.stringify(videoId)}></div>
<div id='myDivone' data-myVariable={JSON.stringify(firstTen)}></div>
<div id='myDivtwo' data-myVariable={JSON.stringify(hipvideoId)}></div>
<div id='myDivthree' data-myVariable={JSON.stringify(housevideoId)}></div>
<div id='myDivfive' data-myVariable={JSON.stringify(dnbvideoId)}></div>
<div id='myDivsix' data-myVariable={JSON.stringify(gemsvideoId)}></div>
<div id='myDivseven' data-myVariable={JSON.stringify(reggavideoId)}></div>
<div id='myDiveight' data-myVariable={JSON.stringify(turnvideoId)}></div>
<div id='myDivnine' data-myVariable={JSON.stringify(beatvideoId)}></div>
<div id='myDivten' data-myVariable={JSON.stringify(randomVideos)}></div>
<div id='forprofile' data-myVariable={JSON.stringify(profileVids)}></div>

<script is:inline>
  var tag = document.createElement('script');
  tag.src = 'https://www.youtube.com/iframe_api';
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  var data = document.getElementById('myDiv').getAttribute('data-myVariable');
  const songTitle = document.getElementById('song-title');
  // Convert string back to array of objects
  var parsedArray = JSON.parse(data);
  var videoId = parsedArray.map((obj) => obj.video_id);
  var videoTitle = parsedArray.map((obj) => obj.title);
  songTitle.textContent = videoTitle[0];

  function changeVideoId(elementId) {
    var data = document
      .getElementById(elementId)
      .getAttribute('data-myVariable');
    var parsedArray = JSON.parse(data);
    videoId = parsedArray.map((obj) => obj.video_id);
    videoTitle = parsedArray.map((obj) => obj.title);
    songTitle.textContent = videoTitle[0];

    // Reload the player with the new video ID
    currentVideoId = 0;
    player.loadVideoById(videoId[currentVideoId]);

    // Update the thumbnail image
    const thumbnailImage = document.getElementById('video-thumbnail');
    thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
  }

  var player;
  currentVideoId = 0;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      playerVars: {
        showinfo: 0,
        rel: 0,
        modestbranding: 1,
        autoplay: 0,
        origin: 'https://okizoocrew.com/',
      },
      events: {
        onReady: onPlayerReady,
        onStateChange: onPlayerStateChange,
      },
    });
  }

  function onPlayerReady(event) {
    event.target.loadVideoById(videoId[currentVideoId]);
    songTitle.textContent = videoTitle[currentVideoId];

    const thumbnailImage = document.getElementById('video-thumbnail');
    thumbnailImage.style.display = 'block';

    // Set the src attribute of the img tag to the URL of the thumbnail for the current video ID
    thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;

    // bind events
    var playButton = document.getElementById('play-btn');

    var pauseButton = document.getElementById('pause-button');

    var nextButton = document.getElementById('next-button');
    var backButton = document.getElementById('back-button');

    playButton.addEventListener('click', function () {
      player.playVideo();
    });

    pauseButton.addEventListener('click', function () {
      player.pauseVideo();
    });

    nextButton.addEventListener('click', function () {
      currentVideoId++;
      if (currentVideoId >= videoId.length) {
        currentVideoId = 0;
      }
      player.loadVideoById(videoId[currentVideoId]);
      songTitle.textContent = videoTitle[currentVideoId];
      thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
    });

    backButton.addEventListener('click', function () {
      currentVideoId--;
      if (currentVideoId < 0) {
        currentVideoId = videoId.length - 1;
      }
      player.loadVideoById(videoId[currentVideoId]);
      songTitle.textContent = videoTitle[currentVideoId];
      thumbnailImage.src = `https://img.youtube.com/vi/${videoId[currentVideoId]}/default.jpg`;
    });
  }

  function onPlayerStateChange(event) {}

  function onPlayerStateChange(event) {
    if (event.data == YT.PlayerState.ENDED) {
      currentVideoId++;
      if (currentVideoId < videoId.length) {
        player.loadVideoById(videoId[currentVideoId]);
        songTitle.textContent = videoTitle[currentVideoId];
      } else {
        currentVideoId = 0;
        event.target.loadVideoById(videoId[currentVideoId]);
        songTitle.textContent = videoTitle[currentVideoId];
      }
    }

    if (event.data == YT.PlayerState.PLAYING) {
      var playButton = document.getElementById('play-btn');
      var pauseButton = document.getElementById('pause-button');

      playButton.style.display = 'none';

      pauseButton.style.display = 'block';
    } else if (event.data == YT.PlayerState.PAUSED) {
      var playButton = document.getElementById('play-btn');
      var pauseButton = document.getElementById('pause-button');

      pauseButton.style.display = 'none';
      playButton.style.display = 'block';
    }
  }
</script>
